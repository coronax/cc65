MEMORY {
	ZP:  start = $000A, size = $007A, type = rw, define = yes; 
	RAM: start = $0500, size = $7b00, file = %O, define = yes; # Program loads at bottom, stack at top
}
SEGMENTS {
	STARTUP:  load = RAM, type = ro;
	LOWCODE:  load = RAM, type = ro, optional = yes;
	ONCE:     load = RAM, type = ro, optional = yes;
	INIT:     load = RAM, type = ro, define = yes, optional = yes; 
	CODE:     load = RAM, type = ro, align = $100;
	RODATA:   load = RAM, type = ro;
	DATA:     load = RAM, type = rw;
	BSS:      load = RAM, type = bss, define = yes;
	ZEROPAGE: load = ZP,  type = zp;
}

FEATURES {
CONDES: segment = INIT,
type = constructor,
label = __CONSTRUCTOR_TABLE__,
count = __CONSTRUCTOR_COUNT__;
CONDES: segment = RODATA,
type = destructor,
label = __DESTRUCTOR_TABLE__,
count = __DESTRUCTOR_COUNT__;
CONDES: segment = RODATA,
type = interruptor,
label = __INTERRUPTOR_TABLE__,
count = __INTERRUPTOR_COUNT__;
}
SYMBOLS {
__STACKSIZE__: type = weak, value = $0800;
}
